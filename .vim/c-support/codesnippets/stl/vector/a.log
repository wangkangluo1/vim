==25204== Memcheck, a memory error detector
==25204== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==25204== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info
==25204== Command: ./main
==25204== Parent PID: 24253
==25204== 
==25204== 
==25204== HEAP SUMMARY:
==25204==     in use at exit: 20 bytes in 2 blocks
==25204==   total heap usage: 3 allocs, 1 frees, 24 bytes allocated
==25204== 
==25204== 8 bytes in 1 blocks are indirectly lost in loss record 1 of 2
==25204==    at 0x402569A: operator new(unsigned int) (vg_replace_malloc.c:255)
==25204==    by 0x8049143: __gnu_cxx::new_allocator<int>::allocate(unsigned int, void const*) (new_allocator.h:89)
==25204==    by 0x8048FF9: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned int) (stl_vector.h:140)
==25204==    by 0x8048C64: std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) (vector.tcc:322)
==25204==    by 0x8048B08: std::vector<int, std::allocator<int> >::push_back(int const&) (stl_vector.h:741)
==25204==    by 0x8048993: main (stl.cc:27)
==25204== 
==25204== 20 (12 direct, 8 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==25204==    at 0x402569A: operator new(unsigned int) (vg_replace_malloc.c:255)
==25204==    by 0x804894B: main (stl.cc:24)
==25204== 
==25204== LEAK SUMMARY:
==25204==    definitely lost: 12 bytes in 1 blocks
==25204==    indirectly lost: 8 bytes in 1 blocks
==25204==      possibly lost: 0 bytes in 0 blocks
==25204==    still reachable: 0 bytes in 0 blocks
==25204==         suppressed: 0 bytes in 0 blocks
==25204== 
==25204== For counts of detected and suppressed errors, rerun with: -v
==25204== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 18 from 7)
